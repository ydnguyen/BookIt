package GUI;

import Consumer.Consumer;
import ServiceProvider.ServiceProvider;

public class SPBook extends javax.swing.JFrame {
    
    /**
     * Creates new form ContactEditor
     */
    public SPBook() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSPBookStartTimeLabel = new javax.swing.JLabel();
        jSPBookDateLabel = new javax.swing.JLabel();
        jSPBookEndTimeLabel = new javax.swing.JLabel();
        jSPBookConsumerNameLabel = new javax.swing.JLabel();
        jSPBookConsumerNameField = new javax.swing.JTextField();
        jSPBookOkButton = new javax.swing.JButton();
        jSPBookCancelButton = new javax.swing.JButton();
        jSPBookPrompt = new javax.swing.JLabel();
        jSPBookDateField = new javax.swing.JFormattedTextField();
        jSPBookStartTimeField = new javax.swing.JFormattedTextField();
        jSPBookEndTimeField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Service Provider Booking");

        jSPBookStartTimeLabel.setText("Start time:");

        jSPBookDateLabel.setText("Date:");

        jSPBookEndTimeLabel.setText("End time:");

        jSPBookConsumerNameLabel.setText("Consumer name:");

        jSPBookOkButton.setText("OK");
        jSPBookOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSPBookOkButtonActionPerformed(evt);
            }
        });

        jSPBookCancelButton.setText("Cancel");
        jSPBookCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSPBookCancelButtonActionPerformed(evt);
            }
        });

        jSPBookPrompt.setText("Please provide your appointment details:");

        try {
            jSPBookDateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jSPBookStartTimeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jSPBookEndTimeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jSPBookEndTimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSPBookEndTimeFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSPBookPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 413, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(layout.createSequentialGroup()
                            .add(jSPBookOkButton)
                            .add(18, 18, 18)
                            .add(jSPBookCancelButton))
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookStartTimeLabel)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookEndTimeLabel)
                                .add(jSPBookConsumerNameLabel)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookDateLabel))
                            .add(18, 18, 18)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(jSPBookDateField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookStartTimeField)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookConsumerNameField)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jSPBookEndTimeField))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(jSPBookPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSPBookDateField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSPBookDateLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSPBookStartTimeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSPBookStartTimeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSPBookEndTimeLabel)
                    .add(jSPBookEndTimeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSPBookConsumerNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSPBookConsumerNameLabel))
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSPBookOkButton)
                    .add(jSPBookCancelButton))
                .add(23, 23, 23))
        );

        pack();
    }// </editor-fold>                        

    private void jSPBookOkButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        String startTime = jSPBookStartTimeField.getText();
        String date = jSPBookDateField.getText();
        String consumerName = jSPBookConsumerNameField.getText();
        String endTime = jSPBookEndTimeField.getText();
        String str = provider_id + " " + consumerName + " " + date  + " " + startTime + " " + endTime;
        ServiceProvider sp = new ServiceProvider();
        sp.book(str);
        jSPBookPrompt.setText("Appointment registered in the system.");
        //System.out.println( provider_id + " " + date + " " + startTime + " "+ endTime);
    }                                               

    private void jSPBookCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        this.setVisible(false);
    }                                                   

    private void jSPBookEndTimeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SPBook().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jSPBookCancelButton;
    private javax.swing.JTextField jSPBookConsumerNameField;
    private javax.swing.JLabel jSPBookConsumerNameLabel;
    private javax.swing.JFormattedTextField jSPBookDateField;
    private javax.swing.JLabel jSPBookDateLabel;
    private javax.swing.JFormattedTextField jSPBookEndTimeField;
    private javax.swing.JLabel jSPBookEndTimeLabel;
    private javax.swing.JButton jSPBookOkButton;
    private javax.swing.JLabel jSPBookPrompt;
    private javax.swing.JFormattedTextField jSPBookStartTimeField;
    private javax.swing.JLabel jSPBookStartTimeLabel;
    String provider_id = "";
    // End of variables declaration                   
    
}